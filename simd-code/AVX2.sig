signature AVX2 =
sig
  include AVX_TYPES
  val pabsb256:v32qi->v32qi
  val pabsw256:v16hi->v16hi
  val pabsd256:v8si->v8si
  val paddb256:v32qi*v32qi->v32qi
  val paddw256:v16hi*v16hi->v16hi
  val paddd256:v8si*v8si->v8si
  val paddq256:v4di*v4di->v4di
  val paddsb256:v32qi*v32qi->v32qi
  val paddsw256:v16hi*v16hi->v16hi
  val paddusb256:v32qi*v32qi->v32qi
  val paddusw256:v16hi*v16hi->v16hi
  val andsi256:v4di*v4di->v4di 
  val andnotsi256:v4di*v4di->v4di 
  val pavgb256:v32qi*v32qi->v32qi
  val pavgw256:v16hi*v16hi->v16hi
  val pblendvb256:v32qi*v32qi*v32qi->v32qi
  val pblendw256:v16hi*v16hi*int->v16hi
  val pcmpeqb256:v32qi*v32qi->v32qi
  val pcmpeqw256:v16hi*v16hi->v16hi
  val pcmpeqd256:c8si*v8si->v8si 
  val pcmpeqq256:v4di*v4di->v4di 
  val pcmpgtb256:v32qi*v32qi->v32qi
  val pcmpgtw256:16hi*v16hi->v16hi
  val pcmpgtd256:v8si*v8si->v8si 
  val pcmpgtq256:v4di*v4di->v4di 
  val phaddw256:v16hi*v16hi->v16hi
  val phaddd256:v8si*v8si->v8si 
  val phaddsw256:v16hi*v16hi->v16hi
  val phsubw256:v16hi*v16hi->v16hi
  val phsubd256:v8si*v8si->v8si 
  val phsubsw256:v16hi*v16hi->v16hi
  val pmaddubsw256:v32qi*v32qi->v32qi
  val pmaddwd256:v16hi*v16hi->v16hi
  val pmaxsb256:v32qi*v32qi->v32qi
  val pmaxsw256:v16hi*v16hi->v16hi
  val pmaxsd256:v8si*v8si->v8si 
  val pmaxub256:v32qi*v32qi->v32qi
  val pmaxuw256:v16hi*v16hi->v16hi
  val pmaxud256:v8si*v8si->v8si 
  val pminsb256:v32qi*v32qi->v32qi
  val pminsw256:v16hi*v16hi->v16hi
  val pminsd256:v8si*v8si->v8si 
  val pminub256:v32qi*v32qi->v32qi
  val pminuw256:v16hi*v16hi->v16hi
  val pminud256:v8si*v8si->v8si 
  val pmuldq256:v8si*v8si->v4di
  val pmulhrsw256:v16hi*->v16hi->v16hi
  val pmulhuw256:v16hi*v16hi->v16hi
  val pmulhw256:v16hi*v16hi->v16hi
  val pmullw256:v16hi*v16hi->v16hi
  val pmulld256:v8si*v8si->v8si 
  val pmuludq256:v8si*v8si->v4di 
  val por256:v4di*v4di->v4di 
  val psadbw256:v32qi*v32qi->v16hi
  val pshufb256:v32qi*v32qi->v32qi
  val pshufd256:v8si*int->v8si 
  val pshufhw256:v16hi*int->v16hi
  val pshuflw256:v16hi*int->v16hi
  val psignb256:v32qi*v32qi->v32qi
  val psignw256:v16hi*v16hi->v16hi
  val psignd256:v8si*v8si->v8si 
  val pslldqi256:v4di*int->v4di 
  val psllwi256:16hi*int->v16hi
  val psllw256:v16hi*v8hi->v16hi
  val pslldi256:v8si*int->v8si 
  val pslld256:v8si*v4si->v8si 
  val psllqi256:v4di*int->v4di 
  val psllq256:v4di*v2di->v4di 
  val psrawi256:v16hi*int->v16hi
  val psraw256:v16hi*v8hi->v16hi
  val psradi256:v8si*int->v8si 
  val psrad256:v8si*v4si->v8si 
  val psrldqi256:v4di* int->v4di 
  val psrlwi256:v16hi*int->v16hi
  val psrlw256:v16hi*v8hi->v16hi
  val psrldi256:v8si*int->v8si 
  val psrld256:v8si*v4si->v8si 
  val psrlqi256:v4di*int->v4di 
  val psrlq256:v4di*v2di->v4di 
  val psubb256:v32qi*v32qi->v32qi
  val psubw256:v16hi*v16hi->v32hi
  val psubd256:v8si*v8si->v8si 
  val psubq256:v4di*v4di->v4di 
  val psubsb256:v32qi*v32qi->v32qi
  val psubsw256:v16hi*v16hi->v16hi
  val psubusb256:v32qi*v32qi->v32qi
  val psubusw256:v16hi*v16hi->v16hi
  val pxor256:v4di*v4di->v4di 
  val movntdqa256:pv4di->v4di 
  val pblendd128:v4si*v4si->v4si 
  val pblendd256:v8si*v8si->v8si 
  val permvarsi256:v8si*v8si->v8si 
  val permdf256:v4df*int->v4df 
  val permvarsf256:v8sf*v8sf->v8sf 
  val permdi256:v4di*int->v4di 
  val permti256:v4di*v4di*int->v4di 
  val extract128i256:v4di*int->v4di 
  val insert128i256:v4di*v2di*int->v4di 
  val psllv8si:v8si*v8si->v8si 
  val psllv4si:v4si*v4si->v4si 
  val psllv4di:v4di*v4di->v4di 
  val psllv2di:v2di*v2di->v2di 
  val psrav8si:v8si*v8si->v8si 
  val psrav4si:v4si*v4si->v4si 
  val psrlv8si:v8si*v8si->v8si 
  val psrlv4si:v4si*v4si->v4si 
  val psrlv4di:v4di*v4di->v4di 
  val psrlv2di:v2di*v2di->v2di 
  val gathersiv2df:v2df*pcdouble*v4si*v2df*int->v2df 
  val gathersiv4df:v4df*pcdouble*v4si*v4df*int->v4df 
  val gatherdiv2df:v2df*pcdouble*v2di*v2df*int->v2df 
  val gatherdiv4df:v4df*pcdouble*v4di*v4df*int->v4df 
  val gathersiv4sf:v4sf*pcfloat*v4si*v4sf*int->v4sf 
  val gathersiv8sf:v8sf*pcfloat*v8si*v8sf*int->v8sf 
  val gatherdiv4sf:v4sf*pcfloat*v2di*v4sf*int->v4sf 
  val gatherdiv4sf256:v4sf*pcfloat*v4di*v4sf*int->v4sf 
  val gathersiv2di:v2di*pcint64*v4si*v2di*int->v2di 
  val gathersiv4di:v4di*pcint64*v4si*v4di*int->v4di 
  val gatherdiv2di:v2di*pcint64*v2di*v2di*int->v2di 
  val gatherdiv4di:v4di*pcint64*v4di*v4di*int->v4di 
  val gathersiv4si:v4si*pcint*v4si*v4si*int->v4si 
  val gathersiv8si:v8si*pcint*v8si*v8si*int->v8si 
  val gatherdiv4si:v4si*pcint*v2di*v4si*int->v4si 
  val gatherdiv4si256:v4si*pcint*v4di*v4si*int->v4si 
end
(*(defun avx-fun (name in out &optional bin)
  (if (null bin)
    (insert (format "val %s:%s->%s\n" (upcase name) in out))
  (insert (format "val %s:%s*%s->%s\n" (upcase name) in in out))))
(defun make-avx-sig (names)
  (dolist (op names) (apply #'avx-fun op)))
*)

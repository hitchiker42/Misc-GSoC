// MLton gc73dc79-dirty (built Mon May 27 16:34:55 EDT 2013 on Tucker-Portable-Arch)
//   created this file on Thu Jun 13 23:25:33 2013.
// Do not edit this file.
// Flag settings: 
//    align: 8
//    atMLtons: (C-SSE, @MLton, --)
//    chunk: chunk per function
//    closureConvertGlobalize: true
//    closureConvertShrink: true
//    codegen: amd64
//    contifyIntoMain: false
//    debug: false
//    defaultChar: char8
//    defaultWideChar: widechar32
//    defaultInt: int32
//    defaultReal: real64
//    defaultWord: word32
//    diag passes: []
//    drop passes: []
//    elaborate allowConstant (default): false
//    elaborate allowConstant (enabled): true
//    elaborate allowFFI (default): true
//    elaborate allowFFI (enabled): true
//    elaborate allowPrim (default): false
//    elaborate allowPrim (enabled): true
//    elaborate allowOverload (default): false
//    elaborate allowOverload (enabled): true
//    elaborate allowRebindEquals (default): false
//    elaborate allowRebindEquals (enabled): true
//    elaborate deadCode (default): false
//    elaborate deadCode (enabled): true
//    elaborate forceUsed (default): false
//    elaborate forceUsed (enabled): true
//    elaborate ffiStr (default): 
//    elaborate ffiStr (enabled): true
//    elaborate nonexhaustiveExnMatch (default): default
//    elaborate nonexhaustiveExnMatch (enabled): true
//    elaborate nonexhaustiveMatch (default): warn
//    elaborate nonexhaustiveMatch (enabled): true
//    elaborate redundantMatch (default): warn
//    elaborate redundantMatch (enabled): true
//    elaborate resolveScope (default): strdec
//    elaborate resolveScope (enabled): true
//    elaborate sequenceNonUnit (default): ignore
//    elaborate sequenceNonUnit (enabled): true
//    elaborate warnUnused (default): false
//    elaborate warnUnused (enabled): true
//    elaborate only: false
//    emit main: true
//    export header: None
//    exn history: false
//    generated output format: executable
//    gc check: Limit
//    indentation: 3
//    inlineIntoMain: true
//    inlineLeafA: {loops = true, repeat = true, size = Some 20}
//    inlineLeafB: {loops = true, repeat = true, size = Some 40}
//    inlineNonRec: {small = 60, product = 320}
//    input file: C-SSE.ssa.main_0.cfg.dot
//    keep CoreML: false
//    keep def use: true
//    keep dot: true
//    keep Machine: true
//    keep passes: []
//    keep RSSA: true
//    keep SSA: true
//    keep SSA2: true
//    keep SXML: true
//    keep XML: true
//    extra_: false
//    lib dir: /home/tucker/usr/lib/mlton
//    lib target dir: /home/tucker/usr/lib/mlton/targets/self
//    loop passes: 1
//    mark cards: true
//    max function size: 10000
//    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}]
//    native commented: 0
//    native live stack: false
//    native optimize: 1
//    native move hoist: true
//    native copy prop: true
//    native copy prop cutoff: 1000
//    native cutoff: 100
//    native live transfer: 8
//    native shuffle: true
//    native ieee fp: false
//    native split: Some 20000
//    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>]
//    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300}
//    prefer abs paths: false
//    prof passes: []
//    profile: None
//    profile branch: false
//    profile C: []
//    profile IL: ProfileSource
//    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)]
//    profile raise: false
//    profile stack: false
//    profile val: false
//    show basis: Some C-SSE.basis
//    show def-use: Some C-SSE.def_use
//    show types: true
//    target: self
//    target arch: AMD64
//    target OS: Linux
//    type check: false
//    verbosity: Silent
//    warn unrecognized annotation: true
//    warn deprecated features: true
//    zone cut depth: 100
digraph "main_0 control-flow graph" {
label = "main_0 control-flow graph"; { rank  = "min"; n0 }
n1 [fontcolor = "Black", shape = "box", label = "L_48 ()\lL_44 (Overflow_1)\l"]
n1 -> n2 [label = "\n", style = "solid"]
n3 [fontcolor = "Black", shape = "box", label = "L_47 (x_11541: word64)\lx_11542: list_8 = ::_8 (x_11473)\lloop_28 (x_11542, x_11541, 0x0)\l"]
n3 -> n4 [label = "\n", style = "solid"]
n5 [fontcolor = "Black", shape = "box", label = "L_46 ()\lL_44 (Overflow_1)\l"]
n5 -> n2 [label = "\n", style = "solid"]
n6 [fontcolor = "Black", shape = "box", label = "L_45 (x_11538: word64)\lx_11539: list_8 = ::_8 (x_11477)\lloop_30 (x_11539, x_11538, 0x0)\l"]
n6 -> n7 [label = "\n", style = "solid"]
n2 [fontcolor = "Black", shape = "box", label = "L_44 (x_11534: exn)\lStdio_print (\"unhandled...)\lStdio_print (\"Overflow\")\lStdio_print (\"\\\\n\")\lMLton_bug (\"unhandled...)\lreturn ()\l"]
n8 [fontcolor = "Black", shape = "box", label = "L_43 ()\lL_44 (Overflow_1)\l"]
n8 -> n2 [label = "\n", style = "solid"]
n9 [fontcolor = "Black", shape = "box", label = "L_42 (x_11535: word64)\lx_11536: list_8 = ::_8 (x_11481)\lloop_32 (x_11536, x_11535, 0x0)\l"]
n9 -> n10 [label = "\n", style = "solid"]
n11 [fontcolor = "Black", shape = "box", label = "L_39 ()\lcase x_11530\l"]
n11 -> n12 [label = "::_0\n", style = "solid"]
n11 -> n13 [label = "nil_0\n", style = "solid"]
n14 [fontcolor = "Black", shape = "box", label = "L_40 ()\lx_11532: list_5 = ::_5 (nil_5, \"MLton.Exi...)\lx_11531: list_5 = ::_5 (x_11532, \"Fail: \")\lconcat_3 (x_11531)\l"]
n14 -> n15 [label = "\n", style = "dashed"]
n14 -> n16 [label = "\n", style = "dotted"]
n17 [fontcolor = "Black", shape = "box", label = "L_41 ()\lcase x_11530\l"]
n17 -> n12 [label = "::_0\n", style = "solid"]
n17 -> n13 [label = "nil_0\n", style = "solid"]
n18 [fontcolor = "Black", shape = "box", label = "L_38 ()\lMLton_bug (\"toplevel ...)\lreturn ()\l"]
n19 [fontcolor = "Black", shape = "box", label = "L_37 ()\lexiting_1 := true\lMLton_halt (0x1)\l"]
n19 -> n15 [label = "\n", style = "solid"]
n15 [fontcolor = "Black", shape = "box", label = "L_36 ()\lStdio_print (\"Top-level...)\lMLton_halt (0x1)\l"]
n15 -> n18 [label = "\n", style = "solid"]
n20 [fontcolor = "Black", shape = "box", label = "print_1 (x_11527: word8 vector)\lStdio_print (x_11527)\lx_11528: bool = ! exiting_1\lcase x_11528\l"]
n20 -> n19 [label = "false\n", style = "solid"]
n20 -> n15 [label = "true\n", style = "solid"]
n16 [fontcolor = "Black", shape = "box", label = "L_35 (x_11524: word8 vector)\lx_11526: list_5 = ::_5 (::_5(...), x_11524)\lx_11525: list_5 = ::_5 (x_11526, \"unhandled...)\lconcat_3 (x_11525)\l"]
n16 -> n15 [label = "\n", style = "dashed"]
n16 -> n20 [label = "\n", style = "dotted"]
n12 [fontcolor = "Black", shape = "box", label = "L_33 (x_11530: list_0, x_11529: lambdas_0)\lcase x_11529\l"]
n12 -> n11 [label = "Env_2\n", style = "solid"]
n12 -> n14 [label = "Env_0\n", style = "solid"]
n12 -> n17 [label = "Env_1\n", style = "solid"]
n13 [fontcolor = "Black", shape = "box", label = "L_34 ()\lL_35 (\"Fail\")\l"]
n13 -> n16 [label = "\n", style = "solid"]
n21 [fontcolor = "Black", shape = "box", label = "L_32 ()\lx_11523: list_0 = ! messagers_1\lcase x_11523\l"]
n21 -> n12 [label = "::_0\n", style = "solid"]
n21 -> n13 [label = "nil_0\n", style = "solid"]
n22 [fontcolor = "Black", shape = "box", label = "L_30 ()\lexiting_1 := true\lMLton_halt (0x0)\l"]
n22 -> n23 [label = "\n", style = "solid"]
n23 [fontcolor = "Black", shape = "box", label = "L_31 ()\lStdio_print (\"Top-level...)\lMLton_halt (0x1)\l"]
n23 -> n21 [label = "\n", style = "solid"]
n24 [fontcolor = "Black", shape = "box", label = "L_28 ()\lx_11522: list_0 = ! messagers_1\lx_11521: list_0 = ::_0 (x_11522, Env_0)\lmessagers_1 := x_11521\lx_11520: list_0 = ! messagers_1\lx_11519: list_0 = ::_0 (x_11520, Env_1)\lmessagers_1 := x_11519\lx_11518: list_0 = ! messagers_1\lx_11517: list_0 = ::_0 (x_11518, Env_2)\lmessagers_1 := x_11517\lexiting_1: bool ref = ref false\lx_11516: bool = ! exiting_1\lcase x_11516\l"]
n24 -> n22 [label = "false\n", style = "solid"]
n24 -> n23 [label = "true\n", style = "solid"]
n25 [fontcolor = "Black", shape = "box", label = "L_29 ()\lx_11515: word64 = x_11513 + 0x1\lloop_41 (x_11515)\l"]
n25 -> n26 [label = "\n", style = "solid"]
n26 [fontcolor = "Black", shape = "box", label = "loop_41 (x_11513: word64)\lx_11514: bool = x_11513 < 0x1\lcase x_11514\l"]
n26 -> n24 [label = "false\n", style = "solid"]
n26 -> n25 [label = "true\n", style = "solid"]
n27 [fontcolor = "Black", shape = "box", label = "L_26 ()\lloop_41 (0x0)\l"]
n27 -> n26 [label = "\n", style = "solid"]
n28 [fontcolor = "Black", shape = "box", label = "L_27 ()\lArray_update (x_11508, x_11510, 0x0)\lx_11512: word64 = 0x1 + x_11510\lloop_40 (x_11512)\l"]
n28 -> n29 [label = "\n", style = "solid"]
n29 [fontcolor = "Black", shape = "box", label = "loop_40 (x_11510: word64)\lx_11511: bool = x_11510 < x_11509\lcase x_11511\l"]
n29 -> n27 [label = "false\n", style = "solid"]
n29 -> n28 [label = "true\n", style = "solid"]
n30 [fontcolor = "Black", shape = "box", label = "L_24 ()\lx_11509: word64 = 0x41\lx_11508: word8 array = Array_array (x_11509)\lloop_40 (0x0)\l"]
n30 -> n29 [label = "\n", style = "solid"]
n31 [fontcolor = "Black", shape = "box", label = "L_25 ()\lArray_update (x_11503, x_11505, 0x0)\lx_11507: word64 = 0x1 + x_11505\lloop_39 (x_11507)\l"]
n31 -> n32 [label = "\n", style = "solid"]
n32 [fontcolor = "Black", shape = "box", label = "loop_39 (x_11505: word64)\lx_11506: bool = x_11505 < x_11504\lcase x_11506\l"]
n32 -> n30 [label = "false\n", style = "solid"]
n32 -> n31 [label = "true\n", style = "solid"]
n33 [fontcolor = "Black", shape = "box", label = "L_22 ()\lx_11504: word64 = 0x21\lx_11503: word8 array = Array_array (x_11504)\lloop_39 (0x0)\l"]
n33 -> n32 [label = "\n", style = "solid"]
n34 [fontcolor = "Black", shape = "box", label = "L_23 ()\lx_11502: word64 = x_11500 + 0x1\lloop_38 (x_11502)\l"]
n34 -> n35 [label = "\n", style = "solid"]
n35 [fontcolor = "Black", shape = "box", label = "loop_38 (x_11500: word64)\lx_11501: bool = x_11500 < 0x100\lcase x_11501\l"]
n35 -> n33 [label = "false\n", style = "solid"]
n35 -> n34 [label = "true\n", style = "solid"]
n36 [fontcolor = "Black", shape = "box", label = "L_21 ()\lx_11498: word64 = x_11492 + 0x1\lloop_37 (x_11498)\l"]
n36 -> n37 [label = "\n", style = "solid"]
n38 [fontcolor = "Black", shape = "box", label = "L_19 ()\lx_11499: bool = cmax_1 < x_11494\lcase x_11499\l"]
n38 -> n36 [label = "false\n", style = "solid"]
n38 -> n39 [label = "true\n", style = "solid"]
n39 [fontcolor = "Black", shape = "box", label = "L_20 ()\lcase x_11496\l"]
n39 -> n40 [label = "::_1\n", style = "solid"]
n39 -> n36 [label = "nil_1\n", style = "solid"]
n40 [fontcolor = "Black", shape = "box", label = "L_18 (x_11496: list_1, x_11495: (word8 * word8))\lcmax_1: word8 = #0 x_11495\lcmin_1: word8 = #1 x_11495\lx_11497: bool = x_11494 < cmin_1\lcase x_11497\l"]
n40 -> n38 [label = "false\n", style = "solid"]
n40 -> n39 [label = "true\n", style = "solid"]
n41 [fontcolor = "Black", shape = "box", label = "L_16 ()\lloop_38 (0x0)\l"]
n41 -> n35 [label = "\n", style = "solid"]
n42 [fontcolor = "Black", shape = "box", label = "L_17 ()\lx_11494: word8 = WordS64_extdToWord8 (x_11492)\lL_18 (::_1(...), global_22)\l"]
n42 -> n40 [label = "\n", style = "solid"]
n37 [fontcolor = "Black", shape = "box", label = "loop_37 (x_11492: word64)\lx_11493: bool = x_11492 < 0x100\lcase x_11493\l"]
n37 -> n41 [label = "false\n", style = "solid"]
n37 -> n42 [label = "true\n", style = "solid"]
n43 [fontcolor = "Black", shape = "box", label = "L_14 ()\lloop_37 (0x0)\l"]
n43 -> n37 [label = "\n", style = "solid"]
n44 [fontcolor = "Black", shape = "box", label = "L_15 ()\lx_11491: word64 = x_11489 + 0x1\lloop_36 (x_11491)\l"]
n44 -> n45 [label = "\n", style = "solid"]
n45 [fontcolor = "Black", shape = "box", label = "loop_36 (x_11489: word64)\lx_11490: bool = x_11489 < 0x100\lcase x_11490\l"]
n45 -> n43 [label = "false\n", style = "solid"]
n45 -> n44 [label = "true\n", style = "solid"]
n46 [fontcolor = "Black", shape = "box", label = "L_12 ()\lloop_36 (0x0)\l"]
n46 -> n45 [label = "\n", style = "solid"]
n47 [fontcolor = "Black", shape = "box", label = "L_13 ()\lx_11488: word64 = x_11486 + 0x1\lloop_35 (x_11488)\l"]
n47 -> n48 [label = "\n", style = "solid"]
n48 [fontcolor = "Black", shape = "box", label = "loop_35 (x_11486: word64)\lx_11487: bool = x_11486 < 0x100\lcase x_11487\l"]
n48 -> n46 [label = "false\n", style = "solid"]
n48 -> n47 [label = "true\n", style = "solid"]
n49 [fontcolor = "Black", shape = "box", label = "L_10 ()\lloop_35 (0x0)\l"]
n49 -> n48 [label = "\n", style = "solid"]
n50 [fontcolor = "Black", shape = "box", label = "L_11 ()\lx_11485: word64 = 0x1 + x_11483\lloop_34 (x_11485)\l"]
n50 -> n51 [label = "\n", style = "solid"]
n51 [fontcolor = "Black", shape = "box", label = "loop_34 (x_11483: word64)\lx_11484: bool = x_11483 < 0x100\lcase x_11484\l"]
n51 -> n49 [label = "false\n", style = "solid"]
n51 -> n50 [label = "true\n", style = "solid"]
n52 [fontcolor = "Black", shape = "box", label = "loop_33 (x_11533: list_8)\lcase x_11533\l"]
n52 -> n52 [label = "::_8\n", style = "solid"]
n52 -> n53 [label = "nil_8\n", style = "solid"]
n53 [fontcolor = "Black", shape = "box", label = "L_9 ()\lloop_34 (0x0)\l"]
n53 -> n51 [label = "\n", style = "solid"]
n54 [fontcolor = "Black", shape = "box", label = "L_7 ()\lx_11480 + 0x1\l"]
n54 -> n8 [label = "Overflow\n", style = "dashed"]
n54 -> n9 [label = "\n", style = "solid"]
n55 [fontcolor = "Black", shape = "box", label = "L_8 ()\lcase x_11481\l"]
n55 -> n52 [label = "::_8\n", style = "solid"]
n55 -> n53 [label = "nil_8\n", style = "solid"]
n10 [fontcolor = "Black", shape = "box", label = "loop_32 (x_11481: list_8, x_11480: word64, x_11479: word64)\lx_11482: bool = 0x0 = x_11479\lcase x_11482\l"]
n10 -> n54 [label = "false\n", style = "solid"]
n10 -> n55 [label = "true\n", style = "solid"]
n56 [fontcolor = "Black", shape = "box", label = "loop_31 (x_11537: list_8)\lcase x_11537\l"]
n56 -> n56 [label = "::_8\n", style = "solid"]
n56 -> n57 [label = "nil_8\n", style = "solid"]
n57 [fontcolor = "Black", shape = "box", label = "L_6 ()\lloop_32 (::_8(...), 0x1, 0x7FFFFFFF...)\l"]
n57 -> n10 [label = "\n", style = "solid"]
n58 [fontcolor = "Black", shape = "box", label = "L_4 ()\lx_11476 + 0x1\l"]
n58 -> n5 [label = "Overflow\n", style = "dashed"]
n58 -> n6 [label = "\n", style = "solid"]
n59 [fontcolor = "Black", shape = "box", label = "L_5 ()\lcase x_11477\l"]
n59 -> n56 [label = "::_8\n", style = "solid"]
n59 -> n57 [label = "nil_8\n", style = "solid"]
n7 [fontcolor = "Black", shape = "box", label = "loop_30 (x_11477: list_8, x_11476: word64, x_11475: word64)\lx_11478: bool = 0x0 = x_11475\lcase x_11478\l"]
n7 -> n58 [label = "false\n", style = "solid"]
n7 -> n59 [label = "true\n", style = "solid"]
n60 [fontcolor = "Black", shape = "box", label = "loop_29 (x_11540: list_8)\lcase x_11540\l"]
n60 -> n60 [label = "::_8\n", style = "solid"]
n60 -> n61 [label = "nil_8\n", style = "solid"]
n61 [fontcolor = "Black", shape = "box", label = "L_3 ()\lmessagers_1: list_0 ref = ref nil_0\lloop_30 (::_8(...), 0x1, 0x7FFFFFFF...)\l"]
n61 -> n7 [label = "\n", style = "solid"]
n62 [fontcolor = "Black", shape = "box", label = "L_1 ()\lx_11472 + 0x1\l"]
n62 -> n1 [label = "Overflow\n", style = "dashed"]
n62 -> n3 [label = "\n", style = "solid"]
n63 [fontcolor = "Black", shape = "box", label = "L_2 ()\lcase x_11473\l"]
n63 -> n60 [label = "::_8\n", style = "solid"]
n63 -> n61 [label = "nil_8\n", style = "solid"]
n4 [fontcolor = "Black", shape = "box", label = "loop_28 (x_11473: list_8, x_11472: word64, x_11471: word64)\lx_11474: bool = 0x0 = x_11471\lcase x_11474\l"]
n4 -> n62 [label = "false\n", style = "solid"]
n4 -> n63 [label = "true\n", style = "solid"]
n0 [fontcolor = "Black", shape = "box", label = "L_0 ()\lloop_28 (::_8(...), 0x1, 0x40000000...)\l"]
n0 -> n4 [label = "\n", style = "solid"]
}
